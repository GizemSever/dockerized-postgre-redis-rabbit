version: "3"

services:
    rabbitmq:
        image: rabbitmq:3-management-alpine
        container_name: rabbitmq
        ports:
            - ${RABBITMQ_PORT}:5672
            - ${RABBITMQ_MANAGEMENT_PORT}:15672
        volumes:
            - ./.volumes/rabbitmq:/var/lib/rabbitmq/mnesia
    postgres:
        image: postgres:13
        container_name: postgres
        environment:
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_DB=${POSTGRES_DB}
        ports:
            - ${POSTGRES_PORT}:5432
        volumes:
            - ./.volumes/pgdata:/var/lib/postgresql/data
    mongodb:
        container_name: mongodb
        image: mongo:5.0
        ports:
            - ${MONGO_PORT}:27017
        environment:
            - MONGO_INITDB_DATABASE=${MONGO_DB}
            - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
            - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
        volumes:
            #            - ./.docker/mongo-entrypoint:/docker-entrypoint-initdb.d
            - ./.volumes/mongo:/data/db
    redis:
        image: redis:6
        container_name: redis
        hostname: redis
        ports:
            - ${REDIS_PORT}:6379
        volumes:
            - ./.docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
            - ./.volumes/redis:/var/lib/redis
        networks:
            - redis-network
    redis-commander:
        container_name: redis-commander
        image: rediscommander/redis-commander
        environment:
            - REDIS_HOSTS=redis
        networks:
            - redis-network
        ports:
            - ${REDIS_COMMANDER_PORT}:8081
networks:
    redis-network:
